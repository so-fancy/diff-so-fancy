#!/usr/bin/env bash

[[ $# -ge 1 ]] && [[ -f "$1" ]] && input="$1" || input="-"

get_script_dir () {
  src="${BASH_SOURCE[0]}"

  while [[ -h "$src" ]]; do
    dir="$(cd -P "$( dirname "$src" )" && pwd)"
    src="$(readlink "$src")"
    [[ $src != /* ]] && src="$dir/$src"
  done

  dir="$(cd -P "$( dirname "$src" )" && pwd)"
  echo "$dir"
}

get_config() {
  value="$(git config --get "diff-so-fancy.$1")"
  if [[ $value && ! -z $2 ]]; then
    value="$2"
  fi
  printf "%s" "$value"
}


# find my sed
hash gsed 2> /dev/null && SED=gsed || SED=sed

# find my diff-highlight
if hash diff-highlight 2> /dev/null; then
  diff_highlight=diff-highlight
else
  diff_highlight="$(get_script_dir)/third_party/diff-highlight/diff-highlight"
fi

CSI=$'\x1b\['
NL="
"
color_code_regex="(${CSI}([0-9]{1,3}(;[0-9]{1,3}){0,3})[m|K])?"
reset_color="${CSI}0?m"
reset_escape="${CSI}m"
dim_magenta="${CSI}38;05;146m"
invert_color="${CSI}7m"

git_index_line_pattern="^($color_code_regex)index .*"
diffsymbols="$(get_config 'diffsymbols' false)"

format_diff_header () {
  # simplify the unified patch diff header
    $SED -E "/$git_index_line_pattern/{N;s/$git_index_line_pattern\n//;}" \
    | $SED -E "s/^($color_code_regex)\-\-\-(.*)$/\1$(print_horizontal_rule)\\${NL}\1\-\-\-\-\5/g" \
    | $SED -E "s/^($color_code_regex)\+\+\+(.*)$/\1\+\+\+\+\5\\${NL}\1$(print_horizontal_rule)/g"
}

colorize_context_line () {
  # extra color for @@ context line
  $SED -E "s/@@$reset_color $reset_color(.*$)/@@ $dim_magenta\1/g"
}

mark_empty_lines () {
  if [[ "$diffsymbols" = true ]]; then
    cat
  else
    $SED -E "s/^$color_code_regex[\+\-]$reset_color\s*$/$invert_color\1 $reset_escape/g"
  fi
}

strip_leading_symbols () {
  if [[ "$diffsymbols" = true ]]; then
    cat
  else
    # strip the + and -
    $SED -E "s/^($color_code_regex)[\+\-]/\1 /g"
  fi
}

strip_first_column () {
  if [[ "$diffsymbols" = true ]]; then
    cat
  else
    $SED -E "s/^($color_code_regex)[[:space:]]/\1/g"
  fi
}

print_horizontal_rule () {
  let width="$(tput cols)"

  if [[ $(uname -s) =~ (MINGW32*|MSYS*) ]]; then
    width=$(( width - 1 ))
  fi

  # echo -n 'â”€' | hexdump -C
  local -r dash=$( printf "%b" "\xe2\x94\x80" )
  printf "%*s\n" "$width" | $SED "s/ /${dash}/g"
}

print_header_clean () {
  "$(get_script_dir)/libs/header_clean/header_clean.pl"
}

# run it.
# shellcheck disable=SC2002
cat $input \
  | $diff_highlight \
  | format_diff_header \
  | colorize_context_line \
  | mark_empty_lines \
  | strip_leading_symbols \
  | strip_first_column \
  | print_header_clean
